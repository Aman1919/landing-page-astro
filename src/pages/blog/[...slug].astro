---
import { getCollection } from "astro:content";
import Image from "astro/components/Image.astro";
import BannerImage from "../../assests/banner1.png";
import BlogLayout from "../../layouts/BlogLayout.astro";
import BlogPostCard from "../../components/blogPostCard.astro";
import Breadcrumb from "../../components/breadcrumb.astro";

// Fetch all blog entries and generate paths
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { pathname: currentPath } = Astro.url;

// Get the current blog entry and related blogs
const { entry } = Astro.props;
const blogs = await getCollection("blog");
const relatedBlogs = blogs.filter(blog => blog.slug !== entry.slug);

// Render the content of the current blog entry
const { Content } = await entry.render();
---

<BlogLayout bgClasses={'bg-black text-white sticky'} title={entry.data.title}>
<div class="bg-black py-2 px-2">
  <Breadcrumb currentPath={currentPath} />
</div>
  <div class="wrapper-container">
    <!-- Banner Image Section -->
    <div class="relative w-[800px] mt-4 max-w-full h-[300px] m-auto">
      <Image
        src={BannerImage}
        alt="Banner Image"
        class="absolute inset-0 w-full h-full bg-cover bg-center bg-no-repeat"
      />
    </div>

    <div class="w-[800px] max-w-full mt-4 m-auto">
      <h1 class="text-[var(--primary-orange)] text-3xl font-bold mb-2">{entry.data.title}</h1>
      <p class="text-lg text-justify text-gray-600 mb-6">{entry.data.description}</p>
      
      <div class="custom-content-wrapper prose prose-lg text-gray-800">
        <Content />
      </div>
    </div>

    <div class="related-blogs flex flex-wrap justify-start gap-4 mx-auto my-8">

      {relatedBlogs.map(blog => (
        <BlogPostCard blog={blog} />
      ))}
    </div>
  </div>
</BlogLayout>

