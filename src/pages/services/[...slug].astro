---
import { getCollection } from "astro:content";
import BlogLayout from "../../layouts/BlogLayout.astro";
import Imagecard from "../../components/imagecard.astro";
import Image from "astro/components/Image.astro";
import Breadcrumb from "../../components/breadcrumb.astro";
export async function getStaticPaths() {
  const blogEntries = await getCollection("services");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}



const { pathname: currentPath } = Astro.url;

// Get the current blog entry and related blogs
const { entry } = Astro.props;
const blogs = await getCollection("services");
const OtherServices = blogs.filter(blog => blog&&blog.slug !== entry.slug).slice(0, 3);
const { Content } = await entry.render();

---
<BlogLayout bgClasses={'bg-black text-white sticky'}>
<div
      class="relative top-0 w-full mb-6 h-[60vh] lg:h-[70vh] overflow-hidden"
    >
    
<Image
        src={entry.data.image}
        alt="Banner Image"
        class="absolute inset-0 w-full h-full bg-cover bg-center bg-no-repeat"
      />
      <div class="absolute inset-0 bg-gradient-to-r from-black/65 to-black/65">
      </div>
      <div class="relative wrapper-container flex items-center h-full px-3">
        <div class="text-left">
          <h1 class="text-white text-[clamp(2.1rem,5vw,5rem)] mb-4 relative">
            {entry.data.title}
          </h1>
          <Breadcrumb currentPath={currentPath} />
        </div>
      </div>
    </div>


<div class="wrapper-container">
    
    <div class="w-full max-w-full mt-4 m-auto">
      <h1 class="text-[var(--primary-orange)] text-3xl font-bold mb-2">{entry.data.title}</h1>
      <p class="text-lg text-gray-600 mb-6">{entry.data.description}</p>
      
      <div class="custom-content-wrapper prose prose-lg text-gray-800">
        <Content />
      </div>

    </div>
    <div class=" flex flex-wrap justify-between gap-4 mx-auto my-8">

      {OtherServices.map( (blog) => {
                   
return <Imagecard title={blog.data.title} img={blog.data.image} link={`/services/${blog.slug}`} desc={blog.data.description}  />
      })}
    </div>
  </div>
</BlogLayout>

