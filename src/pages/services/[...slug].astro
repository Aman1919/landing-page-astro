---
import { getCollection } from "astro:content";
import BlogLayout from "../../layouts/BlogLayout.astro";
import Imagecard from "../../components/imagecard.astro";
import Banner from "../../components/banner.astro";
export async function getStaticPaths() {
  const blogEntries = await getCollection("services");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { pathname: currentPath } = Astro.url;

// Get the current blog entry and related blogs
const { entry } = Astro.props;
const services = await getCollection("services");
const OtherServices = services
  .filter((blog) => blog && blog.slug !== entry.slug)
  .sort(() => Math.random() - 0.5)
  .slice(0, 3);
const { Content } = await entry.render();
---

<BlogLayout bgClasses={"bg-black text-white sticky"}>

<Banner title={entry.data.title} {currentPath} img={entry.data.image}/>

  <div class="wrapper-container">
    <div class="w-full max-w-full mt-4 m-auto">
      <h1 class="text-[var(--primary-orange)] text-3xl font-bold mb-2">
        {entry.data.title}
      </h1>
      <!-- <p class="text-lg text-gray-600 mb-6">{entry.data.description}</p> -->

      <div class="custom-content-wrapper prose prose-lg text-gray-800">
        <Content />
      </div>
    </div>
    <div class="flex flex-wrap justify-between gap-4 mx-auto my-8">
      {
        OtherServices.map((service) => {
          return (
            <Imagecard
              title={service.data.title}
              img={service.data.image}
              link={`/services/${service.slug}`}
              desc={service.data.description}
            />
          );
        })
      }
    </div>
  </div>
</BlogLayout>
